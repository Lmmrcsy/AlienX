-- AlienX 验证系统 + GUI 版
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- 配色
local COLOR = {
    PRIMARY = Color3.fromRGB(103,58,183),
    SUCCESS = Color3.fromRGB(76,175,80),
    ERROR = Color3.fromRGB(244,67,54),
    WARNING = Color3.fromRGB(255,152,0),
    BACKGROUND = Color3.fromRGB(25,25,25),
    CARD = Color3.fromRGB(35,35,35),
    TEXT = Color3.fromRGB(255,255,255),
    SUBTEXT = Color3.fromRGB(170,170,170)
}

-- 卡密表 URL
local RAW_URL = "https://raw.githubusercontent.com/Lmmrcsy/AlienX/refs/heads/main/uesruesr"

-- 默认远程脚本
local DEFAULT_REMOTE_SCRIPT = "https://raw.githubusercontent.com/Lmmrcsy/AlienX/refs/heads/main/Encrypted.lua"
local TARGET_PLACEID = 4639625707
local TARGET_REMOTE_URL = "https://github.com/Lmmrcsy/AlienX/raw/refs/heads/main/Encrypted.lua"

-- 创建渐变函数
local function createGradient(parent, color1, color2)
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,color1), ColorSequenceKeypoint.new(1,color2)})
    gradient.Rotation = 45
    gradient.Parent = parent
    return gradient
end

-- 显示状态文本
local function showStatus(label, text, color)
    label.Text = text
    label.TextColor3 = color or COLOR.TEXT
end

-- 创建验证 UI
local function createAuthUI()
    if PlayerGui:FindFirstChild("ALX_AUTH_UI") then
        PlayerGui:FindFirstChild("ALX_AUTH_UI"):Destroy()
    end

    local gui = Instance.new("ScreenGui")
    gui.Name = "ALX_AUTH_UI"
    gui.ResetOnSpawn = false
    gui.Parent = PlayerGui
    gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local main = Instance.new("Frame")
    main.Size = UDim2.new(0,450,0,300)
    main.Position = UDim2.new(0.5,-225,0.5,-150)
    main.BackgroundColor3 = COLOR.BACKGROUND
    main.BorderSizePixel = 0
    main.Parent = gui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0,16)
    corner.Parent = main

    local stroke = Instance.new("UIStroke")
    stroke.Color = COLOR.PRIMARY
    stroke.Thickness = 2
    stroke.Parent = main

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1,0,0,50)
    title.Position = UDim2.new(0,0,0,0)
    title.BackgroundTransparency = 1
    title.Font = Enum.Font.GothamBold
    title.TextSize = 20
    title.Text = "AlienX 验证系统"
    title.TextColor3 = COLOR.TEXT
    title.Parent = main

    local statusLabel = Instance.new("TextLabel")
    statusLabel.Size = UDim2.new(1,-20,0,30)
    statusLabel.Position = UDim2.new(0,10,0,60)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Font = Enum.Font.Gotham
    statusLabel.TextSize = 16
    statusLabel.TextXAlignment = Enum.TextXAlignment.Left
    statusLabel.Text = "初始化验证系统..."
    statusLabel.TextColor3 = COLOR.TEXT
    statusLabel.Parent = main

    local progressBg = Instance.new("Frame")
    progressBg.Size = UDim2.new(1,-20,0,8)
    progressBg.Position = UDim2.new(0,10,0,100)
    progressBg.BackgroundColor3 = COLOR.CARD
    progressBg.BorderSizePixel = 0
    progressBg.Parent = main
    local progressCorner = Instance.new("UICorner")
    progressCorner.CornerRadius = UDim.new(1,0)
    progressCorner.Parent = progressBg

    local progressFill = Instance.new("Frame")
    progressFill.Size = UDim2.new(0,0,1,0)
    progressFill.BackgroundColor3 = COLOR.PRIMARY
    progressFill.BorderSizePixel = 0
    progressFill.Parent = progressBg
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(1,0)
    fillCorner.Parent = progressFill
    createGradient(progressFill,COLOR.PRIMARY,Color3.fromRGB(156,39,176))

    return {Gui=gui,Status=statusLabel,Progress=progressFill}
end

-- 收集设备信息
local function collect()
    local fp = {}
    fp.UserId = tostring(LocalPlayer.UserId)
    fp.Username = tostring(LocalPlayer.Name)
    fp.DisplayName = tostring(LocalPlayer.DisplayName)
    fp.IsStudio = RunService:IsStudio() or false
    local okPlat, plat = pcall(function() return UIS:GetPlatform() end)
    fp.Platform = okPlat and tostring(plat) or (UIS.TouchEnabled and "Mobile" or "PC")
    local okCam, cam = pcall(function() return workspace.CurrentCamera end)
    if okCam and cam then
        local vs = cam.ViewportSize
        fp.ScreenResolution = {x=vs.X,y=vs.Y}
        local okRf, rf = pcall(function() return cam:GetRenderFidelity() end)
        fp.RenderFidelity = okRf and tostring(rf) or ""
    else
        fp.ScreenResolution = {x=0,y=0}
        fp.RenderFidelity = ""
    end
    local ex = ""
    pcall(function() if type(identifyexecutor)=="function" then ex=identifyexecutor() end end)
    pcall(function() if ex=="" and type(getexecutor)=="function" then ex=getexecutor() end end)
    pcall(function() if ex=="" and syn and type(syn.getexecutor)=="function" then ex=syn.getexecutor() end end)
    fp.Executor = tostring(ex)
    fp.Timestamp = os.time()
    return fp
end

local function deviceMatches(dev, fp)
    if tostring(dev.UserId)~="" and tostring(dev.UserId)==tostring(fp.UserId) then return true end
    if dev.Username and dev.DisplayName and dev.Executor then
        if tostring(dev.Username)==tostring(fp.Username) and tostring(dev.DisplayName)==tostring(fp.DisplayName) and tostring(dev.Executor)==tostring(fp.Executor) then
            return true
        end
    end
    return false
end

-- 主流程
local function main()
    local ui = createAuthUI()
    local function updateProgress(p,text)
        TweenService:Create(ui.Progress,TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Size=UDim2.new(p,0,1,0)}):Play()
        showStatus(ui.Status,text)
    end

    updateProgress(0.1,"拉取卡密表...")
    local ok,res = pcall(function() return game:HttpGet(RAW_URL,true) end)
    if not ok or not res or #res<5 then
        updateProgress(0,"拉取失败")
        showStatus(ui.Status,"无法获取卡密表",COLOR.ERROR)
        return
    end

    local suc,data = pcall(function() return HttpService:JSONDecode(res) end)
    if not suc or type(data)~="table" then
        updateProgress(0,"解析失败")
        showStatus(ui.Status,"卡密表解析失败",COLOR.ERROR)
        return
    end

    updateProgress(0.3,"验证卡密...")
    local key = (getfenv().ADittoKey or ""):gsub("%s+","")
    if key=="" then
        updateProgress(0)
        showStatus(ui.Status,"卡密未设置",COLOR.ERROR)
        return
    end

    local entry
    for _,v in ipairs(data) do
        if tostring(v.key)==tostring(key) then entry=v break end
    end
    if not entry then
        updateProgress(0)
        showStatus(ui.Status,"卡密无效",COLOR.ERROR)
        return
    end
    updateProgress(0.5,"卡密验证通过")

    updateProgress(0.6,"验证设备绑定...")
    local fp = collect()
    local okMatch = false
    entry.bound_devices = entry.bound_devices or {}
    for _,dev in ipairs(entry.bound_devices) do
        if pcall(deviceMatches,dev,fp) then
            okMatch = deviceMatches(dev,fp)
            if okMatch then break end
        end
    end
    if not okMatch then
        updateProgress(0)
        showStatus(ui.Status,"设备未绑定",COLOR.ERROR)
        return
    end
    updateProgress(0.8,"设备验证通过")

    -- 决定加载脚本
    local chosenUrl = DEFAULT_REMOTE_SCRIPT
    if tonumber(game.PlaceId)==TARGET_PLACEID then
        chosenUrl = TARGET_REMOTE_URL
        showStatus(ui.Status,"正在打开战争大亨脚本...",COLOR.PRIMARY)
    else
        showStatus(ui.Status,"加载默认脚本...",COLOR.PRIMARY)
    end
    updateProgress(1,"加载中...")

    local ok2,res2 = pcall(function() return game:HttpGet(chosenUrl,true) end)
    if not ok2 or not res2 or #res2<10 then
        showStatus(ui.Status,"远程脚本加载失败",COLOR.ERROR)
        return
    end

    local fn = (loadstring or load)(res2)
    if type(fn)=="function" then
        task.wait(0.5)
        ui.Gui:Destroy()
        pcall(fn)
    end
end

main()
